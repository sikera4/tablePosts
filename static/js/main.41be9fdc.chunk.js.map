{"version":3,"sources":["Components/Table/TableHeader/TableHeader.tsx","Components/Table/TableRow/TableRow.tsx","Components/Table/Table.tsx","Components/UserFilter/UserFilter.tsx","Components/SearchInput/SearchInput.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TableHeadItems","headersInfo","useState","sortingItem","setSortingItem","sortingOrder","setSortingOrder","headers","map","header","scope","title","className","onClick","item","order","onSort","onSortingChange","toUpperCase","TableRow","post","onDelete","Object","keys","key","ind","toString","id","Table","props","tableHeadData","tableBodyData","posts","UserFilter","defaultValue","onChange","onUserFilterChange","value","usersData","user","username","SearchInput","onSelectedSearchFieldChange","type","placeholder","onSearchStringChange","App","setPosts","setTableHeadData","searchString","setSearchString","column","sortingSettings","setSortingSettings","postIdToDelete","setPostIdToDelete","setUsersData","selectedUserId","setSelectedUserId","selectedSearchField","setSelectedSearchField","fetchUsers","a","fetch","response","status","Error","json","data","fetchData","deletePost","method","alert","useEffect","document","trackPromise","then","headData","push","catch","err","message","neededPosts","useMemo","filter","userId","includes","body","reversed","sort","b","localeCompare","undefined","numeric","e","parseInt","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingIndicator","promiseInProgress","usePromiseTracker","style","width","height","display","justifyContent","alignItems","color","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.41be9fdc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport {HeaderInfoInterface} from \"../../../Interfaces/Interfaces\";\n\n\nconst TableHeadItems = ({ headersInfo }: {headersInfo: HeaderInfoInterface}) => {\n  const [sortingItem, setSortingItem] = useState('');\n  const [sortingOrder, setSortingOrder] = useState('asc');\n  const onSortingChange = (item: string) => {\n    const order = sortingOrder === 'asc' ? 'desc' : 'asc';\n    setSortingItem(item);\n    setSortingOrder(order);\n    headersInfo.onSort(item, order);\n  }\n  return (\n    <tr>\n      {(headersInfo.headers) ? headersInfo.headers.map((header) => {\n        return (<th \n        scope=\"col\" \n        key={header} \n        title={header} \n        className={`table__header-${header}`}\n        onClick={() => {\n          onSortingChange(header);\n        }}>{header.toUpperCase()}{sortingItem && sortingItem === header && (\n            header === sortingItem && sortingOrder === 'asc' ? <ArrowUpwardIcon/> : <ArrowDownwardIcon/>)}</th>)\n      }): ''}<th scope=\"col\" className=\"table__header-delete\">DELETE</th>\n    </tr>\n  )\n}\n\nexport default TableHeadItems;","import React from \"react\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {PostInterface} from \"../../../Interfaces/Interfaces\";\n\nconst TableRow = ({ post, onDelete } : { post: PostInterface, onDelete: (id:string) => void }) => {\n  return (\n    <tr key={post.id}>\n      {Object.keys(post).map((key, ind) => {\n        return <td key={post[key as keyof PostInterface].toString() + ind.toString()}>{post[key as keyof PostInterface]}</td>\n      })}\n      <td className=\"table__delete-icon\" onClick={() => {\n        onDelete(post.id.toString());\n      }}><DeleteIcon/></td>\n    </tr>\n  )\n}\n\nexport default TableRow;","import React from \"react\";\nimport './TableStyles.scss';\nimport {TableDataInterface} from \"../../Interfaces/Interfaces\";\nimport TableHeadItems from \"./TableHeader/TableHeader\";\nimport TableRow from \"./TableRow/TableRow\";\n\n\n\nconst Table = (props: TableDataInterface) => {\n  return (\n    <div className=\"table-container\">\n      <table className=\"table\">\n        <thead className=\"table__head\">\n          {props.tableHeadData && <TableHeadItems headersInfo={props.tableHeadData}/>}\n        </thead>\n        <tbody>\n          { props.tableBodyData.posts.map((post) => {\n            return <TableRow \n            key={post.id} \n            post={post} \n            onDelete={props.tableBodyData.onDelete}/>\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Table;","import React from \"react\";\nimport './UserFilter.scss';\nimport { UserFilterPropsInterface } from '../../Interfaces/Interfaces';\n \n\nconst UserFilter = (props: UserFilterPropsInterface) => {\n  return (\n    <div className=\"user-filter\">\n      <span className=\"user-filter__filter-caption\">Filter posts by user: </span>\n      <select className=\"user-filter__filter\" defaultValue=\"0\"\n      onChange={props.onUserFilterChange}>\n        <option value=\"0\">Choose a user...</option>\n        {props.usersData.map(user => {\n          return (\n            <option key={user.id} value={user.id}\n            >{`Username: ${user.username}, ID: ${user.id}`}</option>)\n        })}\n      </select>\n    </div>\n  )\n}\n\nexport default UserFilter;","import React from 'react';\nimport './SearchInput.scss';\nimport { SearchInputInterface } from '../../Interfaces/Interfaces';\n\n\nconst SearchInput = (props: SearchInputInterface) => {\n  return (\n    <div className=\"search-input\">\n      <span>Search through posts'\n        <select defaultValue=\"none\" className=\"search-input__search-field-select\"\n        onChange={props.onSelectedSearchFieldChange}>\n          <option value=\"none\">Choose a field...</option>\n          {props.headers.map((header) => {\n            return (\n              <option key={header} value={header}>{header.toUpperCase()}</option>\n            )\n          })}\n          </select>: \n        </span>\n      <input type=\"text\"\n      placeholder=\"Search...\"\n      className=\"search-input__input\"\n      onChange={props.onSearchStringChange}/>\n    </div>\n  )\n}\n\nexport default SearchInput;","import React, { useState, useEffect, useMemo } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\nimport './App.scss';\nimport Table from './Components/Table/Table';\nimport UserFilter from './Components/UserFilter/UserFilter';\nimport SearchInput from './Components/SearchInput/SearchInput';\nimport { HeaderInfoInterface, PostInterface, TableBodyDataInterface, UsersDataInterface } from './Interfaces/Interfaces';\n\n\nfunction App() {\n\n  const [posts, setPosts] = useState<PostInterface[]>();\n  const [tableHeadData, setTableHeadData] = useState<HeaderInfoInterface>();\n  const [searchString, setSearchString] = useState<string>('');\n  const [sortingSettings, setSortingSettings] = useState({column: '', order: ''});\n  const [postIdToDelete, setPostIdToDelete] = useState<string>('');\n  const [usersData, setUsersData] = useState<UsersDataInterface[]>();\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [selectedSearchField, setSelectedSearchField] = useState('');\n\n  // methods that are passed to child components\n  const onSort = (column: string, order: string) => {\n    setSortingSettings({column: column, order: order});\n  }\n\n  const onDeleteClick = (id: string) => {\n    setPostIdToDelete(id);\n  }\n\n  const onUserFilterChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(parseInt(e.target.value));\n  }\n\n  const onSelectedSearchFieldChange = (e:React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedSearchField(e.target.value);\n  }\n\n  const onSearchStringChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    setSearchString(e.target.value);\n  }\n\n  // methods that make api calls\n  const fetchUsers = async () => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    if (response.status !== 200) {\n      throw new Error('Could not fetch users data');\n    }\n    const data: UsersDataInterface[] = await response.json();\n    return data;\n  }\n\n  const fetchData = async () => {\n    const response: Response = await fetch('https://jsonplaceholder.typicode.com/posts');\n    if (response.status !== 200) {\n      throw new Error('Could not fetch the posts');\n    }\n    const data: PostInterface[] = await response.json();\n    return data;\n  }\n\n  const deletePost = async (id: string) => {\n    if (id !== '') {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n      method: 'DELETE',\n    });\n    if (response.status !== 200) {\n      throw new Error('Could not delete the post!');\n    }\n    alert(`Successfully deleted the post with id ${id} (or would've if it did actually work)`);\n    setPostIdToDelete('');\n    return response.status;\n    }\n  }\n\n  // methods that deal with fetched data\n  useEffect(() => {\n    document.title='Table with posts!'\n    trackPromise(\n    fetchData()\n    .then((data) => {\n      setPosts(data);\n      let headData = [];\n      for (let header of Object.keys(data[0])) {\n        headData.push(header);\n      }\n      setTableHeadData({headers: headData, onSort: onSort});\n    }).catch(err => alert(err.message + ' posts')));\n  }, []);\n\n  useEffect(() => {\n    deletePost(postIdToDelete).catch(err => alert(err.message));\n    fetchData()\n    .then((data) => {\n      setPosts(data);\n    }).catch(err => alert(err.message));\n  },[postIdToDelete]);\n\n  useEffect(() => {\n    fetchUsers()\n      .then(data => {\n        setUsersData(data);\n      }).catch(err => alert(err.message + ' users'));\n  }, [])\n\n  // method for data control and implementaition of features\n  const neededPosts = useMemo(() => {\n    let neededPosts = posts;\n\n    // implement search through fields\n    if (searchString !== '') {\n      switch (selectedSearchField) {\n        case '':\n          break;\n        case 'userId':\n          neededPosts = neededPosts?.filter(post => post.userId.toString() === searchString);\n          break;\n        case 'id':\n          neededPosts = neededPosts?.filter(post => post.id.toString() === searchString);\n          break;\n        case 'title': \n          neededPosts = neededPosts?.filter(post => post.title.includes(searchString));\n          break;\n        case 'body': \n          neededPosts = neededPosts?.filter(post => post.body.includes(searchString));\n          break;\n      }\n    }\n    \n    // implement sorting\n    if (sortingSettings.column) {\n      const reversed = sortingSettings.order === 'asc' ? 1 : -1;\n      neededPosts = neededPosts?.sort(\n        (a,b) => \n          reversed * (a[sortingSettings.column as keyof PostInterface].toString())\n          .localeCompare(b[sortingSettings.column as keyof PostInterface].toString(), undefined, {numeric: true}));\n    }\n\n    // implement user filter\n    if (selectedUserId) {\n      neededPosts = neededPosts?.filter(post => post.userId === selectedUserId);\n    }\n    return neededPosts;\n  }, [searchString, posts, sortingSettings, selectedUserId, selectedSearchField]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"controls\">\n          {usersData && <h1 className=\"controls__header\">Here's your control panel! Control those posts!</h1>}\n          {usersData && <UserFilter onUserFilterChange={onUserFilterChange} usersData={usersData}/>}\n          {tableHeadData && <SearchInput onSelectedSearchFieldChange={onSelectedSearchFieldChange}\n          onSearchStringChange={onSearchStringChange}\n          headers={tableHeadData.headers}/>}\n        </div>\n        {posts && <Table \n        tableBodyData={{posts: neededPosts, onDelete: onDeleteClick} as TableBodyDataInterface} \n        tableHeadData={tableHeadData!}/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst LoadingIndicator = () => {\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    <>\n      {promiseInProgress ?\n      <div className=\"loader\" style={{\n        width: \"100%\",\n        height: \"300\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n        <Loader type=\"Puff\" color=\"#2F4858\" height=\"100\" width=\"100\" />\n      </div>: ''}\n    </>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <LoadingIndicator/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}